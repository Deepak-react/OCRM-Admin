import React, { useState, useEffect } from 'react';
import useCurrencyController from './currencyController';
import CurrencyForm from './Sub-Components/currencyForm';


const ConfirmationModal = ({ isOpen, onConfirm, onCancel, message }) => {
Â  if (!isOpen) return null;


Â  return (
Â  Â  <div className="fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4">
Â  Â  Â  <div className="bg-white rounded-xl shadow-lg p-6 max-w-sm w-full">
Â  Â  Â  Â  <h3 className="text-xl font-bold text-gray-800 mb-4">Confirm Action</h3>
Â  Â  Â  Â  <p className="text-gray-600 mb-6">{message}</p>
Â  Â  Â  Â  <div className="flex justify-end space-x-3">
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={onCancel}
Â  Â  Â  Â  Â  Â  className="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Cancel
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={onConfirm}
Â  Â  Â  Â  Â  Â  className="px-4 py-2 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Deactivate
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};


const CurrencyMaster = () => {
Â  const {
Â  Â  currencies: rawCurrencies = [],
Â  Â  fetchCurrencies,
Â  Â  createCurrency,
Â  Â  updateCurrency,
Â  Â  deleteCurrency,
Â  Â  loading,
Â  Â  error
Â  } = useCurrencyController();


Â  const [showForm, setShowForm] = useState(false);
Â  const [currentPage, setCurrentPage] = useState(1);
Â  const [itemsPerPage] = useState(10);
Â  const [currentCurrency, setCurrentCurrency] = useState(null);
Â  const [successMessage, setSuccessMessage] = useState('');
Â  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);
Â  const [currencyToDelete, setCurrencyToDelete] = useState(null);
Â  const [searchQuery, setSearchQuery] = useState('');


Â  useEffect(() => {
Â  Â  fetchCurrencies();
Â  }, [fetchCurrencies]);


Â  const filteredCurrencies = Array.isArray(rawCurrencies)
Â  Â  ? rawCurrencies.filter(currency =>
Â  Â  Â  Â  currency.country_name.toLowerCase().includes(searchQuery.toLowerCase()) ||
Â  Â  Â  Â  currency.currency_name.toLowerCase().includes(searchQuery.toLowerCase()) ||
Â  Â  Â  Â  currency.currency_code.toLowerCase().includes(searchQuery.toLowerCase())
Â  Â  Â  )
Â  Â  : [];


Â  const handleEdit = (currency) => {
Â  Â  setCurrentCurrency(currency);
Â  Â  setShowForm(true);
Â  };


Â  const handleAdd = () => {
Â  Â  setCurrentCurrency(null);
Â  Â  setShowForm(true);
Â  };


Â  const handleFormSubmit = async (formData) => {
Â  Â  try {
Â  Â  Â  let success;
Â  Â  Â  if (formData.icurrency_id) {
Â  Â  Â  Â  success = await updateCurrency(formData);
Â  Â  Â  } else {
Â  Â  Â  Â  success = await createCurrency(formData);
Â  Â  Â  }


Â  Â  Â  if (success) {
Â  Â  Â  Â  setSuccessMessage(
Â  Â  Â  Â  Â  formData.icurrency_id
Â  Â  Â  Â  Â  Â  ? 'Currency updated successfully! ðŸŽ‰'
Â  Â  Â  Â  Â  Â  : 'Currency added successfully! ðŸŽ‰'
Â  Â  Â  Â  );
Â  Â  Â  Â  setTimeout(() => setSuccessMessage(''), 3000);
Â  Â  Â  Â  setShowForm(false);
Â  Â  Â  Â  fetchCurrencies();
Â  Â  Â  }
Â  Â  } catch (err) {
Â  Â  Â  console.error('Form submission error:', err);
Â  Â  }
Â  };


Â  const handleDeactivateClick = (currencyId) => {
Â  Â  setCurrencyToDelete(currencyId);
Â  Â  setShowDeleteConfirm(true);
Â  };


Â  const handleConfirmDeactivate = async () => {
Â  Â  if (currencyToDelete) {
Â  Â  Â  await deleteCurrency(currencyToDelete);
Â  Â  Â  fetchCurrencies();
Â  Â  }
Â  Â  setShowDeleteConfirm(false);
Â  Â  setCurrencyToDelete(null);
Â  };


Â  // Pagination 
Â  const indexOfLastItem = currentPage * itemsPerPage;
Â  const indexOfFirstItem = indexOfLastItem - itemsPerPage;
Â  const currentItems = filteredCurrencies.slice(indexOfFirstItem, indexOfLastItem);
Â  const totalPages = Math.ceil(filteredCurrencies.length / itemsPerPage);


Â  if (loading && rawCurrencies.length === 0) {
Â  Â  return (
Â  Â  Â  <div className="flex items-center justify-center min-h-screen bg-gray-100">
Â  Â  Â  Â  <div className="text-center text-blue-600 font-semibold text-lg animate-pulse">
Â  Â  Â  Â  Â  Loading currencies...
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  );
Â  }


Â  if (error && !loading) {
Â  Â  return (
Â  Â  Â  <div className="flex items-center justify-center min-h-screen bg-gray-100 p-6">
Â  Â  Â  Â  <div className="text-center p-8 bg-white rounded-lg shadow-md max-w-md w-full">
Â  Â  Â  Â  Â  <p className="text-red-600 font-medium mb-4">Error: {error.message}</p>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={fetchCurrencies}
Â  Â  Â  Â  Â  Â  className="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Retry
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  );
Â  }


Â  return (
Â  Â  <div className="min-h-screen bg-gray-100 p-8 font-sans">
Â  Â  Â  <div className="max-w-7xl mx-auto bg-white p-6 rounded-xl shadow-lg">
Â  Â  Â  Â  <div className="flex justify-between items-center mb-6 border-b pb-4">
Â  Â  Â  Â  Â  <h1 className="text-3xl font-extrabold text-gray-800">Currency Master</h1>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  onClick={handleAdd}
Â  Â  Â  Â  Â  Â  className="px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 transition-colors disabled:opacity-50"
Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  + Add New Currency
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>


Â  Â  Â  Â  {successMessage && (
Â  Â  Â  Â  Â  <div className="mb-6 p-3 bg-green-100 text-green-700 border-l-4 border-green-500 rounded-md shadow-sm">
Â  Â  Â  Â  Â  Â  {successMessage}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}


Â  Â  Â  Â  {showForm && (
Â  Â  Â  Â  Â  <div className="fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4">
Â  Â  Â  Â  Â  Â  <CurrencyForm
Â  Â  Â  Â  Â  Â  Â  initialData={currentCurrency || {}}
Â  Â  Â  Â  Â  Â  Â  onSuccess={handleFormSubmit}
Â  Â  Â  Â  Â  Â  Â  onClose={() => setShowForm(false)}
Â  Â  Â  Â  Â  Â  Â  loading={loading}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}


Â  Â  Â  Â  <ConfirmationModal
Â  Â  Â  Â  Â  isOpen={showDeleteConfirm}
Â  Â  Â  Â  Â  onConfirm={handleConfirmDeactivate}
Â  Â  Â  Â  Â  onCancel={() => setShowDeleteConfirm(false)}
Â  Â  Â  Â  Â  message="Are you sure you want to deactivate this currency? This action cannot be undone."
Â  Â  Â  Â  />


Â  Â  Â  Â  <div className="mb-6">
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  placeholder="Search currencies..."
Â  Â  Â  Â  Â  Â  value={searchQuery}
Â  Â  Â  Â  Â  Â  onChange={(e) => {
Â  Â  Â  Â  Â  Â  Â  setSearchQuery(e.target.value);
Â  Â  Â  Â  Â  Â  Â  setCurrentPage(1);
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 transition-shadow"
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>


Â  Â  Â  Â  {filteredCurrencies.length === 0 && !loading ? (
Â  Â  Â  Â  Â  <div className="flex flex-col items-center justify-center py-20 text-gray-500">
Â  Â  Â  Â  Â  Â  <svg
Â  Â  Â  Â  Â  Â  Â  className="w-20 h-20 mb-4 text-gray-300"
Â  Â  Â  Â  Â  Â  Â  fill="none"
Â  Â  Â  Â  Â  Â  Â  stroke="currentColor"
Â  Â  Â  Â  Â  Â  Â  viewBox="0 0 24 24"
Â  Â  Â  Â  Â  Â  Â  xmlns="http://www.w3.org/2000/svg"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <path
Â  Â  Â  Â  Â  Â  Â  Â  strokeLinecap="round"
Â  Â  Â  Â  Â  Â  Â  Â  strokeLinejoin="round"
Â  Â  Â  Â  Â  Â  Â  Â  strokeWidth={1.5}
Â  Â  Â  Â  Â  Â  Â  Â  d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </svg>
Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-semibold mb-2">No Currencies Found</h3>
Â  Â  Â  Â  Â  Â  <p className="text-md text-center max-w-sm mb-6">
Â  Â  Â  Â  Â  Â  Â  {searchQuery ? `No currencies match your search for "${searchQuery}".` : `There are currently no currencies in the system. Click the button above to add a new one.`}
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  {!searchQuery && (
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleAdd}
Â  Â  Â  Â  Â  Â  Â  Â  className="px-6 py-2 bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 transition-colors"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Add New Currency
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  <div className="overflow-x-auto rounded-lg shadow">
Â  Â  Â  Â  Â  Â  Â  <table className="min-w-full divide-y divide-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  <thead className="bg-blue-600 text-white">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  S.No
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Country Name
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Currency Code
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Currency Name
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Symbol
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-left text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Status
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th scope="col" className="px-6 py-3 text-center text-xs font-bold uppercase">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Actions
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  </thead>
Â  Â  Â  Â  Â  Â  Â  Â  <tbody className="bg-white divide-y divide-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {currentItems.map((currency, index) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const displayIndex = (currentPage - 1) * itemsPerPage + index + 1;
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr key={currency.icurrency_id} className="hover:bg-blue-50 transition-colors">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {displayIndex}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 text-sm text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {currency.country_name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 text-sm text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {currency.currency_code}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 text-sm text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {currency.currency_name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 text-sm text-gray-900">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {currency.symbol}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-sm">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  currency.bactive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {currency.bactive ? 'Active' : 'Inactive'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleEdit(currency)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-blue-600 hover:text-blue-900 mx-2 font-medium"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Edit
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleDeactivateClick(currency.icurrency_id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="text-red-600 hover:text-red-900 mx-2 font-medium"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Deactivate
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  Â  Â  })}
Â  Â  Â  Â  Â  Â  Â  Â  </tbody>
Â  Â  Â  Â  Â  Â  Â  </table>
Â  Â  Â  Â  Â  Â  </div>


Â  Â  Â  Â  Â  Â  {/* Pagination */}
Â  Â  Â  Â  Â  Â  {totalPages > 1 && (
Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-between items-center mt-6">
Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Showing <span className="font-semibold">{indexOfFirstItem + 1}</span> to <span className="font-semibold">{Math.min(indexOfLastItem, filteredCurrencies.length)}</span> of <span className="font-semibold">{filteredCurrencies.length}</span> results
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setCurrentPage(p => Math.max(1, p - 1))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={currentPage === 1}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed"
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Previous
Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  {Array.from({ length: totalPages }, (_, i) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={i + 1}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setCurrentPage(i + 1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`px-4 py-2 text-sm font-medium rounded-lg transition-colors ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  currentPage === i + 1 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {i + 1}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={currentPage === totalPages}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed"
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Next
Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  )}
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};


export default CurrencyMaster;